settings
{
	lobby
	{
		Max FFA Players: 8
	}
	modes
	{
		disabled Assault
		{
			Limit Roles: 2 Of Each Role Per Team
		}
		disabled Control
		{
			Limit Roles: 2 Of Each Role Per Team
		}
		Deathmatch
		{
			enabled maps
			{
				Kanezaka
			}
			Hero Limit: Off
			Score To Win: 20
		}
		disabled Escort
		{
			Limit Roles: 2 Of Each Role Per Team
		}
		disabled Hybrid
		{
			Limit Roles: 2 Of Each Role Per Team
		}
	}
}
variables {
    global:
        0: Players_In_Match
        1: Team_1_Vectors
        2: Team_2_Vectors
        3: Team_3_Vectors
        4: Team_4_Vectors
        5: Team_1
        6: Team_2
        7: Team_3
        8: Team_4
        9: Team_1_Count
        10: Team_2_Count
        11: Team_3_Count
        12: Team_4_Count
        13: Team_1_Nametags
        14: Team_2_Nametags
        15: Team_3_Nametags
        16: Team_4_Nametags
        17: Player_Index
        18: Tertiary_Player_Index
        19: Array_Of_Teams
        20: Array_Of_Team_Counts
        21: Selector
        22: In_Team_Mode
    player:
        0: Team_Membership
        1: Team_Index
        2: Index
        3: Membership_Index
        4: Secondary_Player_Index
        5: Smallest_Team
}
subroutines {
    0: CreateTeams
}
rule ("Rule 1") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Event Player == Host Player;
    }
    actions {
        Create HUD Text(All Players(All Teams), Custom String("X: {0}", X Component Of(Position Of(Event Player)), Null, Null), Null, Null, Left, 0, Color(White), Null, Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Custom String("Y: {0}", Y Component Of(Position Of(Event Player)), Null, Null), Null, Null, Left, 1, Color(White), Null, Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Custom String("Z: {0}", Z Component Of(Position Of(Event Player)), Null, Null), Null, Null, Left, 2, Color(White), Null, Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("Players In Match: {0}, {1}, {2}", First Of(Global.Players_In_Match), Value In Array(Global.Players_In_Match, 1), Custom String("{0}, {1}, {2}", Value In Array(Global.Players_In_Match, 2), Value In Array(Global.Players_In_Match, 3), Custom String("{0}, {1}, {2}", Value In Array(Global.Players_In_Match, 4), Value In Array(Global.Players_In_Match, 5), Custom String("{0}, {1}, {2}", Value In Array(Global.Players_In_Match, 6), Value In Array(Global.Players_In_Match, 7), Custom String("{0}, {1}, {2}", Value In Array(Global.Players_In_Match, 8), Value In Array(Global.Players_In_Match, 9), Custom String("{0}, {1}", Value In Array(Global.Players_In_Match, 10), Value In Array(Global.Players_In_Match, 11), Null)))))), Null, Left, 3, Null, Color(Lime Green), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("Array of Teams: {0} {1} {2}", First Of(Global.Array_Of_Teams), Value In Array(Global.Array_Of_Teams, 1), Custom String("{0} {1}", Value In Array(Global.Array_Of_Teams, 2), Value In Array(Global.Array_Of_Teams, 3), Null)), Null, Left, 4, Null, Color(Lime Green), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("Team_1: {0}, {1}, {2}", First Of(Global.Team_1), Value In Array(Global.Team_1, 1), Value In Array(Global.Team_1, 2)), Null, Left, 5, Null, Color(Rose), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("Team_2: {0}, {1}, {2}", First Of(Global.Team_2), Value In Array(Global.Team_2, 1), Value In Array(Global.Team_2, 2)), Null, Left, 6, Null, Color(Rose), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("Team_3: {0}, {1}, {2}", First Of(Global.Team_3), Value In Array(Global.Team_3, 1), Value In Array(Global.Team_3, 2)), Null, Left, 7, Null, Color(Rose), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("Team_4: {0}, {1}, {2}", First Of(Global.Team_4), Value In Array(Global.Team_4, 1), Value In Array(Global.Team_4, 2)), Null, Left, 8, Null, Color(Rose), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("Team_1_Count: {0}\nTeam_2_Count: {1}\nTeam_3_Count: {2}", Global.Team_1_Count, Global.Team_2_Count, Custom String("{0}\nTeam_4_Count: {1}", Global.Team_3_Count, Global.Team_4_Count, Null)), Null, Left, 9, Null, Color(Sky Blue), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("Smallest Team: {0}\nArray of Team Counts: {1}, {2}", First Of(Sorted Array(Global.Array_Of_Team_Counts, Current Array Element)), First Of(Global.Array_Of_Team_Counts), Custom String("{0}, {1}, {2}", Value In Array(Global.Array_Of_Team_Counts, 1), Value In Array(Global.Array_Of_Team_Counts, 2), Custom String("{0}\nIn Team Mode: {1}", Value In Array(Global.Array_Of_Team_Counts, 3), Global.In_Team_Mode, Null))), Null, Left, 10, Null, Color(Sky Blue), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("1Vectors: {0}, {1}, {2}", First Of(Global.Team_1_Vectors), Value In Array(Global.Team_1_Vectors, 1), Value In Array(Global.Team_1_Vectors, 2)), Null, Right, 0, Null, Color(Yellow), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("2Vectors: {0}, {1}, {2}", First Of(Global.Team_2_Vectors), Value In Array(Global.Team_2_Vectors, 1), Value In Array(Global.Team_2_Vectors, 2)), Null, Right, 1, Null, Color(Red), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("3Vectors: {0}, {1}, {2}", First Of(Global.Team_3_Vectors), Value In Array(Global.Team_3_Vectors, 1), Value In Array(Global.Team_3_Vectors, 2)), Null, Right, 2, Null, Color(Blue), Null, Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Custom String("4Vectors: {0}, {1}, {2}", First Of(Global.Team_4_Vectors), Value In Array(Global.Team_4_Vectors, 1), Value In Array(Global.Team_4_Vectors, 2)), Null, Right, 3, Null, Color(Orange), Null, Visible To and String, Default Visibility);
    }
}

rule ("Fast setup") {
    event {
        Ongoing - Global;
    }
    conditions {
        Is Assembling Heroes == True;
    }
    actions {
        Set Match Time(5);
    }
}

rule ("Initialize variables") {
    event {
        Ongoing - Global;
    }
    actions {
        Set Global Variable(Team_1_Vectors, Array(Vector(-63, 12, -28), Vector(-50, 13, -26), Vector(-58, 11, -21)));
        Set Global Variable(Team_2_Vectors, Array(Vector(-40, 6, 30), Vector(-47, 6, 26), Vector(-52, 8, 33)));
        Set Global Variable(Team_3_Vectors, Array(Vector(-8, 6, 14), Vector(-10, 5.84, 6), Vector(-1, 6, 18)));
        Set Global Variable(Team_4_Vectors, Array(Vector(1, 9, -46), Vector(-9, 7, -49), Vector(7, 8, -40)));
        Set Global Variable(Team_1, Empty Array);
        Set Global Variable(Team_2, Empty Array);
        Set Global Variable(Team_3, Empty Array);
        Set Global Variable(Team_4, Empty Array);
        Set Global Variable(Array_Of_Teams, Array(Global.Team_1, Global.Team_2, Global.Team_3, Global.Team_4));
        Set Global Variable(Selector, 0);
        Big Message(All Players(All Teams), Custom String("Variables were initialized.", Null, Null, Null));
    }
}

rule ("Wait 2 minutes before creating teams") {
    event {
        Ongoing - Global;
    }
    conditions {
        Is Game In Progress == True;
    }
    actions {
        "Wait 2 minutes, then create teams for purposes of teleporting them\n to specified coordinates of Team_X_Vectors"
        Wait(10, Abort When False);
        Big Message(All Players(All Teams), Custom String("Creating teams!", Null, Null, Null));
        Create Dummy Bot(Hero(Hanzo), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Mercy), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Mei), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Ana), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Ashe), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Echo), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Orisa), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(D.Va), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Genji), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Zarya), All Teams, -1, Vector(0, 50, 0), Forward);
        Create Dummy Bot(Hero(Moira), All Teams, -1, Vector(0, 50, 0), Forward);
        Wait(1, Ignore Condition);
        Set Global Variable(In_Team_Mode, True);
        Wait(5, Ignore Condition);
    }
}

rule ("Create and check team status") {
    event {
        Ongoing - Global;
    }
    conditions {
        Is Game In Progress == True;
        Global.In_Team_Mode != False;
    }
    actions {
        Set Global Variable(Players_In_Match, Randomized Array(All Players(All Teams)));
        "For each player in this randomized array, add them to a Team from 1-4\n Team they are added to is increased by 1 each time the loop runs until it hits 3\n i.e. Team 4, then it goes back to Team 1."
        Wait(0.016, Ignore Condition);
        For Global Variable(Player_Index, 0, Count Of(Global.Players_In_Match), 1);
            Modify Global Variable(Selector, Add, 1);
            If(Compare(Global.Selector, ==, 1));
                Modify Global Variable(Team_1, Append To Array, Value In Array(Global.Players_In_Match, Global.Player_Index));
            Else If(Compare(Global.Selector, ==, 2));
                Modify Global Variable(Team_2, Append To Array, Value In Array(Global.Players_In_Match, Global.Player_Index));
            Else If(Compare(Global.Selector, ==, 3));
                Modify Global Variable(Team_3, Append To Array, Value In Array(Global.Players_In_Match, Global.Player_Index));
            Else If(Compare(Global.Selector, ==, 4));
                Modify Global Variable(Team_4, Append To Array, Value In Array(Global.Players_In_Match, Global.Player_Index));
                Set Global Variable(Selector, 0);
            End;
            "Array_Of_Teams[Selector].append(Players_In_Match[Player_Index])"
            Wait(0.016, Ignore Condition);
            Small Message(All Players(All Teams), Custom String("Player assigned team.", Null, Null, Null));
        End;
        Big Message(All Players(All Teams), Custom String("Team memberships created.", Null, Null, Null));
        Wait(0.25, Ignore Condition);
        Create In-World Text(Array(Value In Array(Global.Team_1, 1), Value In Array(Global.Team_1, 2)), Custom String("Teammate", Null, Null, Null), First Of(Global.Team_1), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_1_Nametags, 0, Last Text ID);
        Create In-World Text(Array(First Of(Global.Team_1), Value In Array(Global.Team_1, 2)), Custom String("Teammate", Null, Null, Null), Value In Array(Global.Team_1, 1), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_1_Nametags, 1, Last Text ID);
        Create In-World Text(Array(First Of(Global.Team_1), Value In Array(Global.Team_1, 1)), Custom String("Teammate", Null, Null, Null), Value In Array(Global.Team_1, 2), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_1_Nametags, 2, Last Text ID);
        Start Damage Modification(Array(Value In Array(Global.Team_1, 1), Value In Array(Global.Team_1, 2)), First Of(Global.Team_1), 0.01, Receivers Damagers and Damage Percent);
        Start Damage Modification(Array(First Of(Global.Team_1), Value In Array(Global.Team_1, 2)), Value In Array(Global.Team_1, 1), 0.01, Receivers Damagers and Damage Percent);
        Start Damage Modification(Array(First Of(Global.Team_1), Value In Array(Global.Team_1, 1)), Value In Array(Global.Team_1, 2), 0.01, Receivers Damagers and Damage Percent);
        Create In-World Text(Array(Value In Array(Global.Team_2, 1), Value In Array(Global.Team_2, 2)), Custom String("Teammate", Null, Null, Null), First Of(Global.Team_2), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_2_Nametags, 0, Last Text ID);
        Create In-World Text(Array(First Of(Global.Team_2), Value In Array(Global.Team_2, 2)), Custom String("Teammate", Null, Null, Null), Value In Array(Global.Team_2, 1), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_2_Nametags, 1, Last Text ID);
        Create In-World Text(Array(First Of(Global.Team_2), Value In Array(Global.Team_2, 1)), Custom String("Teammate", Null, Null, Null), Value In Array(Global.Team_2, 2), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_2_Nametags, 2, Last Text ID);
        Start Damage Modification(Array(Value In Array(Global.Team_2, 1), Value In Array(Global.Team_2, 2)), First Of(Global.Team_1), 0.01, Receivers Damagers and Damage Percent);
        Start Damage Modification(Array(First Of(Global.Team_2), Value In Array(Global.Team_2, 2)), Value In Array(Global.Team_2, 1), 0.01, Receivers Damagers and Damage Percent);
        Start Damage Modification(Array(First Of(Global.Team_2), Value In Array(Global.Team_2, 1)), Value In Array(Global.Team_2, 2), 0.01, Receivers Damagers and Damage Percent);
        Create In-World Text(Array(Value In Array(Global.Team_3, 1), Value In Array(Global.Team_3, 2)), Custom String("Teammate", Null, Null, Null), First Of(Global.Team_3), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_3_Nametags, 0, Last Text ID);
        Create In-World Text(Array(First Of(Global.Team_3), Value In Array(Global.Team_3, 2)), Custom String("Teammate", Null, Null, Null), Value In Array(Global.Team_3, 1), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_3_Nametags, 1, Last Text ID);
        Create In-World Text(Array(First Of(Global.Team_3), Value In Array(Global.Team_3, 1)), Custom String("Teammate", Null, Null, Null), Value In Array(Global.Team_3, 2), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_3_Nametags, 2, Last Text ID);
        Start Damage Modification(Array(Value In Array(Global.Team_3, 1), Value In Array(Global.Team_3, 2)), First Of(Global.Team_3), 0.01, Receivers Damagers and Damage Percent);
        Start Damage Modification(Array(First Of(Global.Team_3), Value In Array(Global.Team_3, 2)), Value In Array(Global.Team_3, 1), 0.01, Receivers Damagers and Damage Percent);
        Start Damage Modification(Array(First Of(Global.Team_3), Value In Array(Global.Team_3, 1)), Value In Array(Global.Team_3, 2), 0.01, Receivers Damagers and Damage Percent);
        Create In-World Text(Array(Value In Array(Global.Team_4, 1), Value In Array(Global.Team_4, 2)), Custom String("Teammate", Null, Null, Null), First Of(Global.Team_4), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_4_Nametags, 0, Last Text ID);
        Create In-World Text(Array(First Of(Global.Team_4), Value In Array(Global.Team_4, 2)), Custom String("Teammate", Null, Null, Null), First Of(Global.Team_4), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_4_Nametags, 1, Last Text ID);
        Create In-World Text(Array(First Of(Global.Team_4), Value In Array(Global.Team_4, 1)), Custom String("Teammate", Null, Null, Null), First Of(Global.Team_4), 1, Clip Against Surfaces, Visible To Position and String, Color(Green), Default Visibility);
        Set Global Variable At Index(Team_4_Nametags, 2, Last Text ID);
        Start Damage Modification(Array(Value In Array(Global.Team_4, 1), Value In Array(Global.Team_4, 2)), First Of(Global.Team_4), 0.01, Receivers Damagers and Damage Percent);
        Start Damage Modification(Array(First Of(Global.Team_4), Value In Array(Global.Team_4, 2)), Value In Array(Global.Team_4, 1), 0.01, Receivers Damagers and Damage Percent);
        Start Damage Modification(Array(First Of(Global.Team_4), Value In Array(Global.Team_4, 1)), Value In Array(Global.Team_4, 2), 0.01, Receivers Damagers and Damage Percent);
        Wait(0.25, Ignore Condition);
        Set Global Variable(Team_1_Count, Count Of(Global.Team_1));
        Set Global Variable(Team_2_Count, Count Of(Global.Team_2));
        Set Global Variable(Team_3_Count, Count Of(Global.Team_3));
        Set Global Variable(Team_4_Count, Count Of(Global.Team_4));
        Set Global Variable(Array_Of_Team_Counts, Array(Global.Team_1_Count, Global.Team_2_Count, Global.Team_3_Count, Global.Team_4_Count));
    }
}

rule ("Remove player from team array when leaving") {
    event {
        Ongoing - Global;
    }
    conditions {
        Is Game In Progress == True;
        Global.In_Team_Mode != False;
        Number Of Players(All Teams) < Count Of(Global.Players_In_Match);
    }
    actions {
        For Global Variable(Tertiary_Player_Index, 0, Count Of(Global.Players_In_Match), 1);
            If(Not(Array Contains(All Players(All Teams), Value In Array(Global.Players_In_Match, Global.Tertiary_Player_Index))));
                Set Global Variable(Players_In_Match, Remove From Array(Global.Players_In_Match, Global.Player_Index));
                Big Message(All Players(All Teams), Custom String("Missing player removed from array.", Null, Null, Null));
            End;
        End;
    }
}

rule ("Assign team to players who join") {
    event {
        Player Joined Match;
        All;
        All;
    }
    conditions {
        Is Game In Progress == True;
        Global.In_Team_Mode != False;
        Or(Or(Or(Compare(Count Of(Global.Team_1), >, 0), Compare(Count Of(Global.Team_2), >, 0)), Compare(Count Of(Global.Team_3), >, 0)), Compare(Count Of(Global.Team_4), >, 0)) == True;
    }
    actions {
        Wait(5, Ignore Condition);
        Set Global Variable(Team_1, Remove From Array(Global.Team_1, Null));
        Set Global Variable(Team_2, Remove From Array(Global.Team_2, Null));
        Set Global Variable(Team_3, Remove From Array(Global.Team_3, Null));
        Set Global Variable(Team_4, Remove From Array(Global.Team_4, Null));
        Set Global Variable(Team_1_Count, Count Of(Global.Team_1));
        Set Global Variable(Team_2_Count, Count Of(Global.Team_2));
        Set Global Variable(Team_3_Count, Count Of(Global.Team_3));
        Set Global Variable(Team_4_Count, Count Of(Global.Team_4));
        Set Global Variable(Array_Of_Team_Counts, Array(Global.Team_1_Count, Global.Team_2_Count, Global.Team_3_Count, Global.Team_4_Count));
        Set Player Variable(Event Player, Smallest_Team, First Of(Sorted Array(Global.Array_Of_Team_Counts, Current Array Element)));
        Modify Player Variable(Event Player, Smallest_Team, Append To Array, Event Player);
        Big Message(All Players(All Teams), Custom String("Player joined - they join a team", Null, Null, Null));
    }
}

rule ("Teleport teams to the right coordinates") {
    event {
        Ongoing - Global;
    }
    conditions {
        Is Game In Progress == True;
        Global.In_Team_Mode != False;
        Or(Or(Or(Compare(Count Of(Global.Team_1), >, 0), Compare(Count Of(Global.Team_2), >, 0)), Compare(Count Of(Global.Team_3), >, 0)), Compare(Count Of(Global.Team_4), >, 0)) == True;
    }
    actions {
        Wait(2.5, Ignore Condition);
        Teleport(First Of(Global.Team_1), First Of(Global.Team_1_Vectors));
        Teleport(Value In Array(Global.Team_1, 1), Value In Array(Global.Team_1_Vectors, 1));
        Teleport(Value In Array(Global.Team_1, 2), Value In Array(Global.Team_1_Vectors, 2));
        Wait(0.016, Ignore Condition);
        Teleport(First Of(Global.Team_2), First Of(Global.Team_2_Vectors));
        Teleport(Value In Array(Global.Team_2, 1), Value In Array(Global.Team_2_Vectors, 1));
        Teleport(Value In Array(Global.Team_2, 2), Value In Array(Global.Team_2_Vectors, 2));
        Wait(0.016, Ignore Condition);
        Teleport(First Of(Global.Team_3), First Of(Global.Team_3_Vectors));
        Teleport(Value In Array(Global.Team_3, 1), Value In Array(Global.Team_3_Vectors, 1));
        Teleport(Value In Array(Global.Team_3, 2), Value In Array(Global.Team_3_Vectors, 2));
        Wait(0.016, Ignore Condition);
        Teleport(First Of(Global.Team_4), First Of(Global.Team_4_Vectors));
        Teleport(Value In Array(Global.Team_4, 1), Value In Array(Global.Team_4_Vectors, 1));
        Teleport(Value In Array(Global.Team_4, 2), Value In Array(Global.Team_4_Vectors, 2));
        Big Message(All Players(All Teams), Custom String("Teams have been teleported.", Null, Null, Null));
    }
}

